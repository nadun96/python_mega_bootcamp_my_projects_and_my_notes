Bug-Fixing Exercise 1
The following get_maximum function is designed to return the maximum value of the celsius list, while the last two lines of the code will convert the Celsius value to Fahrenheit and print it out.

def get_maximum():
    celsius = [14, 15.1, 12.3]
    maximum = max(celsius)
    print(maximum)
    
celsius = get_maximum()
fahrenheit = celsius * 1.8 + 32
 
print(fahrenheit)
However, when running the code, the following error is generated:

TypeError: unsupported operand type(s) for *: 'NoneType' and 'float'

Try to fix the problem so that the last two lines can correctly get the maximal Celsius value from the function definition and convert that value to Fahrenheit.

Solution

Day 11, Bug Fixing Exercise 1
Explanation

Line 4 was

    print(maximum)

but it should be
    return maximum
By using "return" we make sure that the function returns a value. Otherwise, it will return a None value. In our case, the value will be stored in the "celsius" variable in line 6.

def get_maximum():
    celsius = [14, 15.1, 12.3]
    maximum = max(celsius)
    return maximum
    
celsius = get_maximum()
fahrenheit = celsius * 1.8 + 32

print(fahrenheit)

 FAQ
Q1: Today, we used to call the custom functions we created using the syntax function(). However, certain built-in functions (e.g., input(x), print(x), etc.) can be called with an argument inside the parenthesis. So, why don't custom functions get an argument as some built-in functions do?

A: Custom functions can also get an argument, but that is something you will learn tomorrow. Stay tuned!

Q2: What is the benefit of creating a function besides avoiding repetitive code?

A: Another benefit of creating functions is to make your code easier to extend and reuse. Being a well-defined block of code a function is easy to copy and paste into other programs you are writing.

For example, you might have created a function that converts an image to greyscale in the Python photo editing program you have created. You can reuse that function in another program where you are processing video to convert the video frames to greyscale.

Likewise, a function can also be used in different parts of the same program. In other words, functions will keep your codebase more organized.

