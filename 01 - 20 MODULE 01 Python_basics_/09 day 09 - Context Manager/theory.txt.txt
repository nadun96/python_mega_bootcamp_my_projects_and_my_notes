Context Manager
with open("todos.txt", "r") as file:
                todos = file.readlines()
-------------------------------------------

Bug-Fixing Exercise 1
with open("file.txt", 'r') as file:
    print(file.read())
    print(len(file.read()))
The Python script above is in the same directory with a file named file.txt whose content is:

Hello You

The Python script should print out the content of the file and the number of characters of the text inside file.txt. So, the expected output would be:

Hello You
9
However, the script prints out this:

Hello You
0
Can you fix the program so it prints out the expected output?



with open("file.txt", 'r') as file:
    print(file.read())
    print(len(file.read()))

Day 8, Bug Fixing Exercise 1
Explanation

If the read() method is called two times, it returns an empty string the second time.To avoid that, we call the read() method once and store its output in a variable:

    content = file.read()

That helps us capture the output inside the variable and then we can use it throughout the rest of the code.

with open("file.txt", 'r') as file:
    content = file.read()

print(content)
print(len(content))


Q1: When should I use read() and when readlines()?

A: If you want to get all the text as one single string, use read(). If you want to get separate strings for each line, use readlines().

Q2: How is the with-context manager actually able to close the file when we are not including the close() method?

A: The close() method is called implicitly even though we don't call it explicitly. The Python interpreter will call the method when it sees that we have written a with-context manager.


